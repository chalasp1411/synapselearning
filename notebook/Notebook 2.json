{
	"name": "Notebook 2",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Sparkpool001",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "47b92fa6-b7c7-4ca7-b9f9-d530f43f2a39"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/8d6c58d4-83f0-4a29-aef2-63cfaf0f5d82/resourceGroups/ResourcegroupforDatafactory/providers/Microsoft.Synapse/workspaces/sakisri/bigDataPools/Sparkpool001",
				"name": "Sparkpool001",
				"type": "Spark",
				"endpoint": "https://sakisri.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Sparkpool001",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"mssparkutils.fs.mount(\r\n",
					"    'abfss://sakisri@sakisri.dfs.core.windows.net',\r\n",
					"    '/synapse',\r\n",
					"    {'accountkey':'duzpuHD0Kjv8ZksS4k+G4lxtu4BBcGzO+GCGbM4Le9dUufIE58GrsjNvxh8ZXB36RyfK/tRCU7nJ+AStE7MpKw=='}\r\n",
					")"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"jobId=mssparkutils.env.getJobId()\r\n",
					"\r\n",
					"spark.read.load('synfs:/' + jobId + '/sakisri/synapse/Address.csv',format='csv',header=True)\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\r\n",
					"mssparkutils.fs.unmount('/synapse')"
				],
				"execution_count": 3
			}
		]
	}
}